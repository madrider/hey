/************************************************************************************************
 * File Name		:	EBBill.txt							*
 * Author Name		:	Vijai Chandra Prasad						*
 * Description		:	Pseudocode to calculate Electricity Bill			*
 * Version		:	1.0								*
 * last Modified Date	:	27/07/2017							*
 * Change Description	:	Initial code							*
 ************************************************************************************************/ 

BEGIN
	DECLARE uid AS STRING
	DECLARE uname AS STRING
	DECLARE lmreading AS NUMBER
	DECLARE cmreading AS NUMBER
	DECLARE unitConsumed AS FLOAT
	DECLARE netAmt as FLOAT
	INITIALIZE lmreading TO 0
	INITIALIZE cmreading TO 0
	INITIALIZE unitConsumed AS 0
	INITIALIZE netAmt TO 0

	PROMPT "Enter user id"
	ACCEPT uid

	PROMPT "User name"
	ACCEPT uname

	PROMPT "Last month reading"
	ACCEPT lmreading

	PROMPT "Current month reading"
	ACCEPT cmreading

	unitConsumed = lmreading - cmreading
	netAmt = calculateAmout(unitConsumed)
	
	PRINT "User ID:", uid
	PRINT "User Name:", uname
	PRINT "Unit Consumed:". unitConsumed
	PRINT "Net amount:", netAmt
END

/************************************************************************************************
 * Module Name		:	calculateAmount()						*
 * Input Params		:	Number								*
 * Return Type		:	Number								*
 * Author Name		:	Vijai Chandra Prasad						*
 * Description		:	Sub program to calculate amount and return the result		*
 * last Modified Date	:	27/07/2017							*
 ************************************************************************************************/ 
SUB calculateAmount(unitConsumed)
	DECLARE CONSTANT unitPrice AS FLOAT AND STORE 1.15
	DECLARE CONSTANT FixedRate AS INTEGER AND STORE 100
	netAmt = (unitConsumed * unitPrice) + Fixedrate
	RETURN netAmt
END SUB
--------------------------------------------------------------------------------------
======================================================================================
--------------------------------------------------------------------------------------
/************************************************************************************************
 * File Name		:	tag colors.txt							*
 * Author Name		:	Vijai Chandra Prasad						*
 * Description		:	Pseudocode to identify tag color based on experience		*
 * Version		:	1.0								*
 * last Modified Date	:	27/07/2017							*
 * Change Description	:	Initial code							*
 ************************************************************************************************/ 
BEGIN
	DECLARE exp AS INTEGER
	INITIALIZE exp TO 0
	PROMT "Enter the experience"
	ACCEPT exp
	IF exp >= 0 && exp < 3 THEN
		PRINT "BLUE"
	ELSE IF exp >= 3 && exp < 5 THEN
		PRINT GREY
	ELSE IF exp >= 5 && exP < 10 THEN
		PRNT YELLOW
	ELSE
		PRINT RED
END IF

-----------------------------------------------------------------------------------
===================================================================================
-----------------------------------------------------------------------------------

/*********************************************************************
* File : 1.3.txt
* Author Name : Vijai Chandra Prasad
* Desc : Program to print fibonacci series 
* Version : 1.0
* Last Modified Date : 28-July-2017
* Change Description : Initial code
*********************************************************************/

BEGIN
	
	DECLARE n AS INTEGER
	DECLARE index AS INTEGER
	DECLARE first AS INTEGER AND INITALISE AS 0
	DECLARE second AS INTEGER AND INITALISE AS 1
	DECLARE next AS INTEGER

	ACCEPT n

	FOR index=0 TO index < n
		IF index <= 1
			next = index
		ELSE
			next= first+second
			first=second
			second=next
		END IF
	END FOR
	PRINT next

END

-----------------------------------------------------------------------------------
===================================================================================
-----------------------------------------------------------------------------------
/*********************************************************************
* File : 1.4.txt
* Author Name : Vijai Chandra Prasad
* Desc : Program to check armstrong number 
* Version : 1.0
* Last Modified Date : 28-July-2017
* Change Description : Initial Code
*********************************************************************/

BEGIN
	DECLARE arms AS INTEGER
	DECLARE check AS INTEGER AND INTIALISE AS 0
	DECLARE remainder AS INTEGER AND INTIALISE AS 0
	DECLARE sum AS INTEGER AND INTIALISE AS 0

	ACCEPT arms
	arms = check
	
	WHILE (check != 0)
		remainder=check % 10
		sum=sum + (remainder * remainder * remainder )
		check = check / 10

		IF sum==arms
			PRINT "Given number is armstrong number"
		ELSE
			PRINT "Given number is not armstrong number"
		END IF
	END WHILE
END
----------------------------------------------------------------------------------------
========================================================================================
----------------------------------------------------------------------------------------
/*********************************************************************
* File : 1.5.txt
* Author Name : Arun Rajachandar R	
* Desc : Program to convert binary number to decimal equivalent
* Version : 1.0
* Last Modified Date : 28-7-2017
* Change Description : Initial code
*********************************************************************/
BEGIN
	DECLARE num AS NUMBER
	PROMPT "Enter the binary number"
	ACCEPT num FROM USER
	PRINT "Decimal equivalent is" + bintodec(num)
	
END

/*********************************************************************
* Module Name : bintodec
* Input Parameters : int
* Return Type : int
* Author : Arun Rajachandar R
* Creation Date : 28-7-2017
* Description : to convert binary to decimal
*********************************************************************/
SUB bintodec(num)
	DECLARE remainder AS NUMBER
	DECLARE decival AS NUMBER
	DECLARE base AS NUMBER
	INITIALISE remainder to 0
	INITIALISE decival to 0  
	WHILE num>0
		remainder = num mod 10
		decival = decival + remainder * base
		num = num / 10
		base = base * 2
	END WHILE	
		
END SUB

---------------------------------------------------------------------------------------
=======================================================================================
---------------------------------------------------------------------------------------
/*********************************************************************
* File : 1.6.txt
* Author Name : Arun Rajachandar R	
* Desc : Program to convert binary number to decimal equivalent
* Version : 1.0
* Last Modified Date : 28-7-2017
* Change Description : Initial code
*********************************************************************/
BEGIN
	DECLARE n As NUMBER
	ACCEPT n FROM USER
	DECLARE num[n] AS ARRAY
	DECLARE odd[n] AS ARRAY
	DECLARE even[n] AS ARRAY
	
	DECLARE i AS NUMBER
	FOR i=0 to n-1 DO
		ACCEPT num[i] FROM USER
	END FOR
	DELCARE min AS NUMBER
	INITIALISE min TO num[0]
	FOR i=0 to n-1 DO
		min = getMin(num[i],min)
	END FOR
	PRINT min
	DECLARE j AS NUMBER
	DECLARE k AS NUMBER
	INITIALISE j TO 0
	INITIALISE k TO 0
	FOR i=0 to n-1 DO
		IF num[i] mod 2 == 0
			even[j]	= num[i]
			j++
		ELSE
			odd[k] = num[i]
			k++
		END IF
	END FOR
	PROMPT "Even numbers are"
	FOR i=0 to i<j 
		PRINT even[i]
	PROMPT "Odd numbers are"
	FOR i=0 to i<k 
		PRINT odd[i]
END

/*********************************************************************
* Module Name : SubProgram to find the min
* Input Parameters : int
* Return Type : int
* Author : Arun Rajachandar R
* Creation Date : 28-7-2017
* Description : to convert binary to decimal
*********************************************************************/
SUB getMin(num,min)
	IF min < num
		RETURN min
END SUB

--------------------------------------------------------------------------------
================================================================================
--------------------------------------------------------------------------------
/*********************************************************************
* File : 1.7.txt
* Author Name : Vijai Chandra Prasad	
* Desc : Program to calculate total price of a product including tax
* Version : 1.0
* Last Modified Date : 28-7-2017
* Change Description : Initial code
*********************************************************************/
BEGIN

	DECLARE p AS NUMBER
	PROMPT "Enter price of your product"
	ACCEPT p FROM USER
	PRINT "Total price of product is " + tp(p)
END

/*********************************************************************
* Module Name : SubProgram to calculate total price of a product including tax
* Input Parameters : int
* Return Type : int
* Author : Vijai Chandra Prasad
* Creation Date : 28-7-2017
* Description : Calculate total price
*********************************************************************/


SUB tp(p)
	DECLARE tc AS NUMBER
	DELCLARE CONSTANT fixed AS NUMBER 
	INITIALISE fixed TO .56
	tc = p * fixed
	RETURN tc
END SUB	
-------------------------------------------------------------------------------------
=====================================================================================
-------------------------------------------------------------------------------------


